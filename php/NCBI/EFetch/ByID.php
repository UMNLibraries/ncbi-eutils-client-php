<?php

require_once 'NCBI/eUtil.php';
require_once 'File/Find/Rule.php';
require_once 'Moose.php';

class NCBI_EFetch_ByID extends Moose
{
    protected function properties()
    {
        // Generated by NCBI: EFetch queries need either these or an id param.
        //self::has('query_key',  array('is' => 'protected',));
        //self::has('WebEnv',     array('is' => 'protected',));
        self::has('ids',        array('is' => 'protected',));

        // TODO: Validate!
        self::has('db',         array('is' => 'protected', 'default' => 'pubmed',));
        self::has('email',      array('is' => 'protected',));

        //  e.g. 'your-tool-name'
        self::has('tool',       array('is' => 'protected',));

        //  TODO: other possibilities than 'citation'?
        self::has('rettype',    array('is' => 'protected', 'default' => 'citation',));

        //  TODO: other possibilities than 'xml'?
        self::has('retmode',    array('is' => 'protected', 'default' => 'xml',));

        self::has('file_set',   array('is' => 'protected',));

        self::has('eutil',
            array
            (
             'is' => 'protected',
             'default_function' => create_function(
                 '',
                 'return new NCBI_eUtil(array("format" => "raw", "util" => "fetch"));'
             ),
            )
        );

        // These are parameters to send on every search request.
        self::has('common_params',
            array
            (
             'is' => 'protected',
             'default' => array('email','db','tool','rettype','retmode',),
            )
        );
    }

    public function fetch()
    {
        // output
        $file_names = array();
    
        $ids = $this->ids();
        $count = count($ids);
        
        $offset = 0;
        // TODO: Make length, i.e. number of records per download, configurable!
        $length = 500;
        
        while ($offset <= ($count-1)) {

            unset( $result, $e, $file_name, $file, $params, $ids_slice );

            $ids_slice = array_slice($ids, $offset, $length);
            $params['id'] = join(',', $ids_slice);
            foreach ($this->common_params() as $param) {
                $params[$param] = $this->$param();
            }
            
            try {
                $result = $this->eutil()->send_request($params);
            } catch (Exception $e) {
                error_log( $e->getMessage );
            }
            if (!isset($e)) {
                $file_name = $this->file_set()->add(); 
                file_put_contents($file_name, $result);
                $file_names[] = $file_name;
            }
            $offset += $length;
        }
        return $file_names;
    }

} // end class NCBI_EFetch_ByID
